/* Reset de estilo - Estamos removendo todos os estilos padrões do navegador */

/* seletor global - Ou seja, todos os elementos da nossa estrutura receberam essas configurações */
*{
    /* margin-top */
    margin: 0;
    padding: 0;
    /* tamanho da caixa */
    /* tamanho total do elemento = contéudo + padding + border */
    box-sizing: border-box;

    /* text-decoration tirar a configuração os elementos link (aquela linha que fica) */
    /*  none - nenhum */
    text-decoration: none;

    /* remove os marcadores(prontinhos) das listas */
    list-style: none; 
}

body{
    font-family: "Arimo", sans-serif;
    background-color: rgb(66, 0, 66);
    color: #fafafa;
}

/* Impede que a imagem ultrapasse a largura do seu contêiner */
img {
  max-width: 100%;
}

/* Usar (,) quando quiser aplicar  mesmo estilo em outro elemento sem precisar escreve-lo novamente */
a, 
li,
button {
    /* transition: backgroud-color 400ms ease 1s; */

    /*transition: backgroud-color 400ms ease, color 500ms ease-in; */

    transition: all 300ms ease;
}

header{
    background-color: rgb(93, 11, 109);

    /* padrão para todos os elementos do HTML */
    /* position: static; */
    /* position: relative; */
    /* top: 20px; */
    /* left: 10px;*/
    
    /* z-index: -1; (header fica por baixo da sessão -1)*/

    /* position: relative; */
    /* header h1{
            position: absolute;
            right: 0;
            bottom: 0; } */
    /* position: fixed; */
    /* bottom: 10px; */

    /* position: sticky; top: 0; (fica colodo no header) */
    position: sticky;

    top: 0;
    left: 0;
    bottom: 0;
    right: 0;

    /* comportamento padrão do display: flex; = row (linha) */
    display: flex;

    /* comportamento padrão */
    flex-direction: row;

    /* justify-content: flex-start; */  /*flex-center*/

    /* espaço entre os elementos */
    justify-content: center;

    /* comportamento padrão de alinhamento de item*/
    /* lida com o alinhamento do conteudo no eixo vertical */
    /* align-items: stretch; */
    align-items: center;

    height: 60px;
}

.container {
  width: 100%;
  max-width: 1200px;
  padding: 0 10px;
  margin: 0 auto;
}

.ajuste-flex {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

header a {
    color: blueviolet;
}

ul {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 10px; /*cria um espaçamento entre os itens da lista*/
}

li {
    padding: 5px 10px;
    border: 2px solid transparent;
}

li:hover {
    background-color: slateblue;
    border-radius: 5px 15px;
}

li:hover a {
    color: rgb(255, 0, 119)
}

.main section {
  background-color: #333131;
  margin-top: 10px;
  padding: 8px;
  border-radius: 8px;
  border: 1px solid #ffffff22;
}

section h2 {
  margin-bottom: 16px;

  /* root em - tamanho da fonte do elemento raiz */
  /* 1rem = 16px */
  font-size: 2rem;
}

section p {
  margin-bottom: 10px;
  font-size: 18px;
  line-height: 150%;

  /* line-height = 18px * 1.5 */
  /* 27px */
}

section a {
  /* background-color = muda a cor de fundo do elemento */
  background-color: #da3ebd;

  /* muda a cor do texto */
  color: #fafafa;

  /* font-size = tamanho da fonte */
  font-size: 18px;

  /* Espessura da fonte */
  font-weight: 600;

  /* alinhamento de texto ao centro */
  text-align: center;

  /* widht(largura) = aplicamos 100% para garantir que o elemento ocupe toda a largura disponivel*/
  width: 100%;

  /* converter a apresentação padrão do elemento(que é inline) para inline-block 
  ele ainda vai se comportar como um elemento inline, porém vai ser capaz de receber propriedades de elementos de bloco, como largura(widht), altura(height), preenchimento(padding)
  */
  display: inline-block;

  /* cria um espaçamento(margin) na parte superior(top) */
  margin-top: 10px;

  /* aplica um preenchimento na parte superior e inferior e mantem as laterais sem preenchimento*/
  padding: 10px 0;

  /* configuração para arredondamento de bordas */
  border-radius: 6px;
}

/* aplicando pseudo-classe do tipo hover, isso faz com que o elemento sofra uma alteração quando o cursor do mouse passar por cima do elemento a */
section a:hover {
  background-color: #942a81;
}

footer {
  background-color: #7c4d74;
  text-align: center;
  padding: 20px 0;
  margin-top: 10px;
}

footer p {
  font-size: 18px;
  margin-bottom: 20px;
}

footer img {
  width: 30px;
}

footer a {
    display: inline-block;
}

/* seletor de irnação adjacente, no caso, ele seleciona o elemento que vem depois do primeiro elemento que vem depois do primeiro elemento mencionado. Nesse caso, estou aplica a margem ao ao elemento que vem depois do P */
/* footer p + a {
  margin-right: 15px;
} */

footer a:first-of-type {
    margin-right: 15px;
}

/* Fim da estilização da index.html */

/* Inicio da estilização do sobre.html */

.sobre section img {
  border-radius: 8px;
}

article {
  margin-top: 15px;
}

article {
  margin-top: 15px;
}

article h3 {
  margin-bottom: 5px;
}

/* Fim da estilização da sobre.html */

/* Inicio da estilização da contato.html */
.contato.html {
  /* d(dinamyc - Dinâmica(o)) v(viewport - visualização) h(height - altura) */
  height: 100dvh;
}

form,
form div {
  display: flex;
  flex-direction: column;
}

form {
  background-color: rgb(121, 61, 106);
  border-radius: 6px;
  padding: 12px;

  gap: 1rem;
}

form div {
  gap: 0.125rem;
}

form label {
  font-size: 1.125rem;
}

form input {
  height: 2rem;
  border-radius: 4px;
  padding: 8px;
  border: 1px solid rgba(0, 0, 0, 0.239);
}

form button {
  height: 2rem;
  border-radius: 4px;
  border: nome;
  background: linear-gradient(160deg, rgba(63, 94, 251, 1)0%,
  rgba(252, 70, 107, 1)100%);
  color: rgb(250, 250, 250);
  font-weight: 400;
  font-size: 1rem;
  cursor: pointer;
}

form button:hover {
  background: linear-gradient(160deg,
  rgb(53,79,211) 0%,
  rgb(196,52,81) 100%);
}